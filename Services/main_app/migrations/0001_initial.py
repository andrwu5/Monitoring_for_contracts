# Generated by Django 3.1.2 on 2021-03-17 10:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_group_name', models.CharField(max_length=30, verbose_name='Имя')),
            ],
            options={
                'verbose_name': 'Рабочая группа',
                'verbose_name_plural': 'Рабочая группа',
            },
        ),
        migrations.CreateModel(
            name='One_time_services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('short_name', models.CharField(max_length=25, verbose_name='Краткое наименование')),
            ],
            options={
                'verbose_name': 'Разовая Услуга',
                'verbose_name_plural': 'Разовая Услуга',
            },
        ),
        migrations.CreateModel(
            name='Scope_of_service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Объем услуги',
                'verbose_name_plural': 'Объем услуги',
            },
        ),
        migrations.CreateModel(
            name='Support_services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('short_name', models.CharField(max_length=25, verbose_name='Краткое наименование')),
            ],
            options={
                'verbose_name': 'Услуга поддержки',
                'verbose_name_plural': 'Услуга поддержки',
            },
        ),
        migrations.CreateModel(
            name='Type_of_service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'тип услуги',
                'verbose_name_plural': 'тип услуги',
            },
        ),
        migrations.CreateModel(
            name='Сlients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_the_organization', models.CharField(max_length=50, verbose_name='Название организации')),
                ('address', models.CharField(max_length=60, verbose_name='Адрес')),
                ('contact_person', models.CharField(max_length=30, verbose_name='Контактное лицо')),
                ('phone_number', models.BigIntegerField(verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиент',
            },
        ),
        migrations.CreateModel(
            name='One_time_contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название')),
                ('date_from', models.DateField(verbose_name='Дата с')),
                ('date_to', models.DateField(verbose_name='Дата по')),
                ('state', models.BooleanField(default=True, verbose_name='Статус')),
                ('cost', models.FloatField(max_length=9, verbose_name='Цена')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('fk_Scope_of_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.scope_of_service', verbose_name='Объем услуги')),
                ('fk_clients', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.сlients', verbose_name='Клиент')),
                ('fk_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.employee', verbose_name='Рабочая группа')),
                ('fk_one_time_services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.one_time_services', verbose_name='Разовая услуга')),
            ],
            options={
                'verbose_name': 'Разовый договор',
                'verbose_name_plural': 'Разовый договор',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название')),
                ('date', models.DateField(verbose_name='Дата')),
                ('cost', models.FloatField(max_length=9, verbose_name='Цена')),
                ('state', models.BooleanField(default=True, verbose_name='Статус')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('fk_Scope_of_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.scope_of_service', verbose_name='Объем услуги')),
                ('fk_clients', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.сlients', verbose_name='Клиент')),
                ('fk_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.employee', verbose_name='Рабочая группа')),
                ('fk_support_services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.support_services', verbose_name='Услуга поддержки')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договор',
            },
        ),
    ]
